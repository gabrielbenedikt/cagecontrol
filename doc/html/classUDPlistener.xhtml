<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>CageControl: UDPlistener Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">CageControl
   &#160;<span id="projectnumber">Control waveplates inside tomography cages</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-slots">Public Slots</a> &#124;
<a href="#signals">Signals</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-slots">Private Slots</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classUDPlistener-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">UDPlistener Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>The <a class="el" href="classUDPlistener.xhtml" title="The UDPlistener class is used to control dinspect with UDP packages. ">UDPlistener</a> class is used to control dinspect with UDP packages.  
 <a href="classUDPlistener.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="udplistener_8h_source.xhtml">udplistener.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for UDPlistener:</div>
<div class="dyncontent">
<div class="center"><img src="classUDPlistener__inherit__graph.png" border="0" usemap="#UDPlistener_inherit__map" alt="Inheritance graph"/></div>
<map name="UDPlistener_inherit__map" id="UDPlistener_inherit__map">
</map>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for UDPlistener:</div>
<div class="dyncontent">
<div class="center"><img src="classUDPlistener__coll__graph.png" border="0" usemap="#UDPlistener_coll__map" alt="Collaboration graph"/></div>
<map name="UDPlistener_coll__map" id="UDPlistener_coll__map">
</map>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-slots"></a>
Public Slots</h2></td></tr>
<tr class="memitem:a4b7a056403f9b80485c92b82c340109a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classUDPlistener.xhtml#a4b7a056403f9b80485c92b82c340109a">bind</a> ()</td></tr>
<tr class="memdesc:a4b7a056403f9b80485c92b82c340109a"><td class="mdescLeft">&#160;</td><td class="mdescRight">bind Binds to a new UDP port  <a href="#a4b7a056403f9b80485c92b82c340109a">More...</a><br /></td></tr>
<tr class="separator:a4b7a056403f9b80485c92b82c340109a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="signals"></a>
Signals</h2></td></tr>
<tr class="memitem:a03cb7a923fb064f41395f8db9409e511"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classUDPlistener.xhtml#a03cb7a923fb064f41395f8db9409e511">Move</a> (QString controller, double HWPang, double QWPang)</td></tr>
<tr class="memdesc:a03cb7a923fb064f41395f8db9409e511"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move moves the waveplates in a cage to certain angles.  <a href="#a03cb7a923fb064f41395f8db9409e511">More...</a><br /></td></tr>
<tr class="separator:a03cb7a923fb064f41395f8db9409e511"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d16ae857b48ba56257008a008b4e6ee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classUDPlistener.xhtml#a3d16ae857b48ba56257008a008b4e6ee">MoveHV</a> (QString controller)</td></tr>
<tr class="memdesc:a3d16ae857b48ba56257008a008b4e6ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">MoveHV moves cage to H/V basis.  <a href="#a3d16ae857b48ba56257008a008b4e6ee">More...</a><br /></td></tr>
<tr class="separator:a3d16ae857b48ba56257008a008b4e6ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e3521c57796737bb229eeadb2f2fdfe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classUDPlistener.xhtml#a3e3521c57796737bb229eeadb2f2fdfe">MovePM</a> (QString controller)</td></tr>
<tr class="memdesc:a3e3521c57796737bb229eeadb2f2fdfe"><td class="mdescLeft">&#160;</td><td class="mdescRight">MovePM moves cage to P/M basis.  <a href="#a3e3521c57796737bb229eeadb2f2fdfe">More...</a><br /></td></tr>
<tr class="separator:a3e3521c57796737bb229eeadb2f2fdfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefb57eacf9148d294952db636eefa9ac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classUDPlistener.xhtml#aefb57eacf9148d294952db636eefa9ac">MoveLR</a> (QString controller)</td></tr>
<tr class="memdesc:aefb57eacf9148d294952db636eefa9ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">MoveLR moves cage to R/L basis.  <a href="#aefb57eacf9148d294952db636eefa9ac">More...</a><br /></td></tr>
<tr class="separator:aefb57eacf9148d294952db636eefa9ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a789cb6a7b7347a2df5cdc85a457bde4a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classUDPlistener.xhtml#a789cb6a7b7347a2df5cdc85a457bde4a">UDPlistener</a> (QSettings *<a class="el" href="classUDPlistener.xhtml#a14614017bcc3fc38e0caad8d4a9781a6">settings</a>, QObject *parent=0)</td></tr>
<tr class="memdesc:a789cb6a7b7347a2df5cdc85a457bde4a"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classUDPlistener.xhtml" title="The UDPlistener class is used to control dinspect with UDP packages. ">UDPlistener</a> listen for commands on a UDP port and execute them.  <a href="#a789cb6a7b7347a2df5cdc85a457bde4a">More...</a><br /></td></tr>
<tr class="separator:a789cb6a7b7347a2df5cdc85a457bde4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-slots"></a>
Private Slots</h2></td></tr>
<tr class="memitem:ac971ee184440cfc88ff260db8ca3a2ca"><td class="memItemLeft" align="right" valign="top"><a id="ac971ee184440cfc88ff260db8ca3a2ca"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classUDPlistener.xhtml#ac971ee184440cfc88ff260db8ca3a2ca">processPendingDatagrams</a> ()</td></tr>
<tr class="memdesc:ac971ee184440cfc88ff260db8ca3a2ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">processPendingDatagrams reads data from the UDP socket <br /></td></tr>
<tr class="separator:ac971ee184440cfc88ff260db8ca3a2ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86e1147a1adf1a32ae49d43529cd53f1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classUDPlistener.xhtml#a86e1147a1adf1a32ae49d43529cd53f1">processCommands</a> (QString msg)</td></tr>
<tr class="memdesc:a86e1147a1adf1a32ae49d43529cd53f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">processCommands extracts commands out of received data and executes them  <a href="#a86e1147a1adf1a32ae49d43529cd53f1">More...</a><br /></td></tr>
<tr class="separator:a86e1147a1adf1a32ae49d43529cd53f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a14614017bcc3fc38e0caad8d4a9781a6"><td class="memItemLeft" align="right" valign="top"><a id="a14614017bcc3fc38e0caad8d4a9781a6"></a>
QSettings *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classUDPlistener.xhtml#a14614017bcc3fc38e0caad8d4a9781a6">settings</a></td></tr>
<tr class="memdesc:a14614017bcc3fc38e0caad8d4a9781a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">configuration <br /></td></tr>
<tr class="separator:a14614017bcc3fc38e0caad8d4a9781a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e391608821969dc58f1cf509d0206fd"><td class="memItemLeft" align="right" valign="top"><a id="a4e391608821969dc58f1cf509d0206fd"></a>
QUdpSocket&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classUDPlistener.xhtml#a4e391608821969dc58f1cf509d0206fd">socket</a></td></tr>
<tr class="memdesc:a4e391608821969dc58f1cf509d0206fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">the UDP socket <br /></td></tr>
<tr class="separator:a4e391608821969dc58f1cf509d0206fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1fb04f4812b70f607727e27cedf26b1"><td class="memItemLeft" align="right" valign="top"><a id="ab1fb04f4812b70f607727e27cedf26b1"></a>
uint&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classUDPlistener.xhtml#ab1fb04f4812b70f607727e27cedf26b1">port</a></td></tr>
<tr class="memdesc:ab1fb04f4812b70f607727e27cedf26b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">port the listener listens to <br /></td></tr>
<tr class="separator:ab1fb04f4812b70f607727e27cedf26b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad032b16f2451215e0f4bd7b6998fc11d"><td class="memItemLeft" align="right" valign="top"><a id="ad032b16f2451215e0f4bd7b6998fc11d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classUDPlistener.xhtml#ad032b16f2451215e0f4bd7b6998fc11d">alreadybound</a></td></tr>
<tr class="memdesc:ad032b16f2451215e0f4bd7b6998fc11d"><td class="mdescLeft">&#160;</td><td class="mdescRight">true if the listener is already listening to a port <br /></td></tr>
<tr class="separator:ad032b16f2451215e0f4bd7b6998fc11d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The <a class="el" href="classUDPlistener.xhtml" title="The UDPlistener class is used to control dinspect with UDP packages. ">UDPlistener</a> class is used to control dinspect with UDP packages. </p>
<dl class="bug"><dt><b><a class="el" href="bug.xhtml#_bug000005">Bug:</a></b></dt><dd>There are no known bugs</dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a789cb6a7b7347a2df5cdc85a457bde4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a789cb6a7b7347a2df5cdc85a457bde4a">&#9670;&nbsp;</a></span>UDPlistener()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">UDPlistener::UDPlistener </td>
          <td>(</td>
          <td class="paramtype">QSettings *&#160;</td>
          <td class="paramname"><em>settings</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">QObject *&#160;</td>
          <td class="paramname"><em>parent</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classUDPlistener.xhtml" title="The UDPlistener class is used to control dinspect with UDP packages. ">UDPlistener</a> listen for commands on a UDP port and execute them. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">settings</td><td>a pointer to a qsettings instance, used to get the port to bind to and known commands</td></tr>
  </table>
  </dd>
</dl>
<p><a class="el" href="classUDPlistener.xhtml" title="The UDPlistener class is used to control dinspect with UDP packages. ">UDPlistener</a> opens a UDP socket and binds to a port specified in qsettings. Incoming packages are analysed to check if they contain known commands. If they do, these commands are executed.</p>
<p>The commands can be changed in the dinspect settings dialog, but the standard ones are:</p><ul>
<li>Move(QString, QString)</li>
<li><a class="el" href="classUDPlistener.xhtml#a03cb7a923fb064f41395f8db9409e511" title="Move moves the waveplates in a cage to certain angles. ">Move(QString, double, double)</a> </li>
</ul>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a4b7a056403f9b80485c92b82c340109a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b7a056403f9b80485c92b82c340109a">&#9670;&nbsp;</a></span>bind</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void UDPlistener::bind </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>bind Binds to a new UDP port </p>
<p>This function checks whether the UDP socket is already bound to a a specific port. If so, it closes this connection and binds to the new port. If not, it binds to the port right away. </p>

</div>
</div>
<a id="a03cb7a923fb064f41395f8db9409e511"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03cb7a923fb064f41395f8db9409e511">&#9670;&nbsp;</a></span>Move</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void UDPlistener::Move </td>
          <td>(</td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>controller</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>HWPang</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>QWPang</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">signal</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Move moves the waveplates in a cage to certain angles. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">controller</td><td>either colorcode of cage or 'all' </td></tr>
    <tr><td class="paramname">HWPang</td><td>angle of the HWP in degree </td></tr>
    <tr><td class="paramname">QWPang</td><td>angle of the QWP in degree </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3d16ae857b48ba56257008a008b4e6ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d16ae857b48ba56257008a008b4e6ee">&#9670;&nbsp;</a></span>MoveHV</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void UDPlistener::MoveHV </td>
          <td>(</td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>controller</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">signal</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>MoveHV moves cage to H/V basis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">controller</td><td>either colorcode of stage, or 'all' </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aefb57eacf9148d294952db636eefa9ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefb57eacf9148d294952db636eefa9ac">&#9670;&nbsp;</a></span>MoveLR</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void UDPlistener::MoveLR </td>
          <td>(</td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>controller</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">signal</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>MoveLR moves cage to R/L basis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">controller</td><td>either colorcode of stage, or 'all' </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3e3521c57796737bb229eeadb2f2fdfe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e3521c57796737bb229eeadb2f2fdfe">&#9670;&nbsp;</a></span>MovePM</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void UDPlistener::MovePM </td>
          <td>(</td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>controller</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">signal</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>MovePM moves cage to P/M basis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">controller</td><td>either colorcode of stage, or 'all' </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a86e1147a1adf1a32ae49d43529cd53f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86e1147a1adf1a32ae49d43529cd53f1">&#9670;&nbsp;</a></span>processCommands</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void UDPlistener::processCommands </td>
          <td>(</td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>msg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>processCommands extracts commands out of received data and executes them </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>input: the received message </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="udplistener_8h_source.xhtml">udplistener.h</a></li>
<li>udplistener.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
