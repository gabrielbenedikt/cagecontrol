<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>CageControl: Motor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">CageControl
   &#160;<span id="projectnumber">Control waveplates inside tomography cages</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-slots">Public Slots</a> &#124;
<a href="#signals">Signals</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classMotor-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Motor Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>The <a class="el" href="classMotor.xhtml" title="The Motor class operates the PCB-motor. ">Motor</a> class operates the PCB-motor.  
 <a href="classMotor.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="motor_8h_source.xhtml">motor.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Motor:</div>
<div class="dyncontent">
<div class="center"><img src="classMotor__inherit__graph.png" border="0" usemap="#Motor_inherit__map" alt="Inheritance graph"/></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Motor:</div>
<div class="dyncontent">
<div class="center"><img src="classMotor__coll__graph.png" border="0" usemap="#Motor_coll__map" alt="Collaboration graph"/></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-slots"></a>
Public Slots</h2></td></tr>
<tr class="memitem:a6f235ed0f9e1ba51cc6cd1dcd823d850"><td class="memItemLeft" align="right" valign="top"><a id="a6f235ed0f9e1ba51cc6cd1dcd823d850"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a6f235ed0f9e1ba51cc6cd1dcd823d850">open</a> (QString port)</td></tr>
<tr class="memdesc:a6f235ed0f9e1ba51cc6cd1dcd823d850"><td class="mdescLeft">&#160;</td><td class="mdescRight">open establishes a connection over a serial port <br /></td></tr>
<tr class="separator:a6f235ed0f9e1ba51cc6cd1dcd823d850"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6302ab51842ec23bd8b36d56e5ae9416"><td class="memItemLeft" align="right" valign="top"><a id="a6302ab51842ec23bd8b36d56e5ae9416"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a6302ab51842ec23bd8b36d56e5ae9416">close</a> ()</td></tr>
<tr class="memdesc:a6302ab51842ec23bd8b36d56e5ae9416"><td class="mdescLeft">&#160;</td><td class="mdescRight">close closes the serialport connection <br /></td></tr>
<tr class="separator:a6302ab51842ec23bd8b36d56e5ae9416"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc21685543cb0f520fec7291b4a642f0"><td class="memItemLeft" align="right" valign="top"><a id="adc21685543cb0f520fec7291b4a642f0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#adc21685543cb0f520fec7291b4a642f0">read</a> ()</td></tr>
<tr class="memdesc:adc21685543cb0f520fec7291b4a642f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">read reads from the serial port <br /></td></tr>
<tr class="separator:adc21685543cb0f520fec7291b4a642f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8305ead4b01433cb8a01eb5440a8b570"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a8305ead4b01433cb8a01eb5440a8b570">write</a> (const QByteArray &amp;data)</td></tr>
<tr class="memdesc:a8305ead4b01433cb8a01eb5440a8b570"><td class="mdescLeft">&#160;</td><td class="mdescRight">write writes to the serialport  <a href="#a8305ead4b01433cb8a01eb5440a8b570">More...</a><br /></td></tr>
<tr class="separator:a8305ead4b01433cb8a01eb5440a8b570"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c95080f6faf87f02844093e948d485a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a4c95080f6faf87f02844093e948d485a">handleError</a> (QSerialPort::SerialPortError error)</td></tr>
<tr class="memdesc:a4c95080f6faf87f02844093e948d485a"><td class="mdescLeft">&#160;</td><td class="mdescRight">handleError prints an error message of the serialport connection and closes the connection  <a href="#a4c95080f6faf87f02844093e948d485a">More...</a><br /></td></tr>
<tr class="separator:a4c95080f6faf87f02844093e948d485a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d9df9be923b64306fa28dff13ceaa2e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a3d9df9be923b64306fa28dff13ceaa2e">showStatusMessage</a> (const QString &amp;message)</td></tr>
<tr class="memdesc:a3d9df9be923b64306fa28dff13ceaa2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">showStatusMessage fills the label in the GUI with text  <a href="#a3d9df9be923b64306fa28dff13ceaa2e">More...</a><br /></td></tr>
<tr class="separator:a3d9df9be923b64306fa28dff13ceaa2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6522462ca0730300ca3335090425786b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a6522462ca0730300ca3335090425786b">isopen</a> ()</td></tr>
<tr class="memdesc:a6522462ca0730300ca3335090425786b"><td class="mdescLeft">&#160;</td><td class="mdescRight">isopen returns the state of the serial connection  <a href="#a6522462ca0730300ca3335090425786b">More...</a><br /></td></tr>
<tr class="separator:a6522462ca0730300ca3335090425786b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b3e37fc95517b98914ce3740232b098"><td class="memItemLeft" align="right" valign="top"><a id="a1b3e37fc95517b98914ce3740232b098"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a1b3e37fc95517b98914ce3740232b098">command_park</a> ()</td></tr>
<tr class="memdesc:a1b3e37fc95517b98914ce3740232b098"><td class="mdescLeft">&#160;</td><td class="mdescRight">command_park moves the motor to the mechanical stop <br /></td></tr>
<tr class="separator:a1b3e37fc95517b98914ce3740232b098"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75c8443fde45f5dc88e7bfe12db75a88"><td class="memItemLeft" align="right" valign="top"><a id="a75c8443fde45f5dc88e7bfe12db75a88"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a75c8443fde45f5dc88e7bfe12db75a88">command_home</a> ()</td></tr>
<tr class="memdesc:a75c8443fde45f5dc88e7bfe12db75a88"><td class="mdescLeft">&#160;</td><td class="mdescRight">command_home sends commands to position at the mechanical stop and afterwards go to the offset starting position, but in an inaccurate way <br /></td></tr>
<tr class="separator:a75c8443fde45f5dc88e7bfe12db75a88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abae5d9c4f4e3e9b67a98ca2486edacb9"><td class="memItemLeft" align="right" valign="top"><a id="abae5d9c4f4e3e9b67a98ca2486edacb9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#abae5d9c4f4e3e9b67a98ca2486edacb9">command_info</a> ()</td></tr>
<tr class="memdesc:abae5d9c4f4e3e9b67a98ca2486edacb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">command_info sends the command to request the PCBMotor information <br /></td></tr>
<tr class="separator:abae5d9c4f4e3e9b67a98ca2486edacb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca8c344a7251cc4067f4d1cba69f7970"><td class="memItemLeft" align="right" valign="top"><a id="aca8c344a7251cc4067f4d1cba69f7970"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#aca8c344a7251cc4067f4d1cba69f7970">command_help</a> ()</td></tr>
<tr class="memdesc:aca8c344a7251cc4067f4d1cba69f7970"><td class="mdescLeft">&#160;</td><td class="mdescRight">command_help sends the command to print the PCBMotor help <br /></td></tr>
<tr class="separator:aca8c344a7251cc4067f4d1cba69f7970"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade0bd3f46caadb9fef19f03629fc4e71"><td class="memItemLeft" align="right" valign="top"><a id="ade0bd3f46caadb9fef19f03629fc4e71"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#ade0bd3f46caadb9fef19f03629fc4e71">command_frequency_sweep</a> ()</td></tr>
<tr class="memdesc:ade0bd3f46caadb9fef19f03629fc4e71"><td class="mdescLeft">&#160;</td><td class="mdescRight">command_frequency_sweep sends the PCBMotor command for a frequency sweep <br /></td></tr>
<tr class="separator:ade0bd3f46caadb9fef19f03629fc4e71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae052b079f5bd433c3561eb8b6d772b80"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#ae052b079f5bd433c3561eb8b6d772b80">command_singlestep</a> (QString dirstring)</td></tr>
<tr class="memdesc:ae052b079f5bd433c3561eb8b6d772b80"><td class="mdescLeft">&#160;</td><td class="mdescRight">command_singlestep moves the motor a single step in a direction specified by dirstring  <a href="#ae052b079f5bd433c3561eb8b6d772b80">More...</a><br /></td></tr>
<tr class="separator:ae052b079f5bd433c3561eb8b6d772b80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafbe8e02e29d2a81287747ae09b3d9fa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#aafbe8e02e29d2a81287747ae09b3d9fa">command_step</a> (uint16_t numsteps, QString dirstring)</td></tr>
<tr class="memdesc:aafbe8e02e29d2a81287747ae09b3d9fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">command_step moves the motor numstep steps in a direction specified by dirstring  <a href="#aafbe8e02e29d2a81287747ae09b3d9fa">More...</a><br /></td></tr>
<tr class="separator:aafbe8e02e29d2a81287747ae09b3d9fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfbe0b96cfb97107128084ec065e31c2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#abfbe0b96cfb97107128084ec065e31c2">command_microstep</a> (uint16_t nummsteps, QString dirstring)</td></tr>
<tr class="memdesc:abfbe0b96cfb97107128084ec065e31c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">command_microstep aplies nummsteps micropulses to the motor  <a href="#abfbe0b96cfb97107128084ec065e31c2">More...</a><br /></td></tr>
<tr class="separator:abfbe0b96cfb97107128084ec065e31c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ca6508221ea2c42a5220848ab37df30"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a9ca6508221ea2c42a5220848ab37df30">stop</a> (bool stop)</td></tr>
<tr class="memdesc:a9ca6508221ea2c42a5220848ab37df30"><td class="mdescLeft">&#160;</td><td class="mdescRight">stop Tries to stop movenents if possible  <a href="#a9ca6508221ea2c42a5220848ab37df30">More...</a><br /></td></tr>
<tr class="separator:a9ca6508221ea2c42a5220848ab37df30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d179f71c181cbeb3cdb44af166e532d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a3d179f71c181cbeb3cdb44af166e532d">command_moveboth</a> (double ang1, double ang2)</td></tr>
<tr class="memdesc:a3d179f71c181cbeb3cdb44af166e532d"><td class="mdescLeft">&#160;</td><td class="mdescRight">command_moveboth moves both motors connected to the controller  <a href="#a3d179f71c181cbeb3cdb44af166e532d">More...</a><br /></td></tr>
<tr class="separator:a3d179f71c181cbeb3cdb44af166e532d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="signals"></a>
Signals</h2></td></tr>
<tr class="memitem:ad12a639c95a4a33f59118dc8145dc1d4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#ad12a639c95a4a33f59118dc8145dc1d4">motorstatusmessage</a> (const QString &amp;message)</td></tr>
<tr class="memdesc:ad12a639c95a4a33f59118dc8145dc1d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">motorstatusmessage emitted when the status of the serial connection changes, with a string indicating the actual state.  <a href="#ad12a639c95a4a33f59118dc8145dc1d4">More...</a><br /></td></tr>
<tr class="separator:ad12a639c95a4a33f59118dc8145dc1d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcf83aa74380932f2408c150b806b5fb"><td class="memItemLeft" align="right" valign="top"><a id="afcf83aa74380932f2408c150b806b5fb"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#afcf83aa74380932f2408c150b806b5fb">ConnectionClosed</a> ()</td></tr>
<tr class="memdesc:afcf83aa74380932f2408c150b806b5fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">emitted when serial connection is closed <br /></td></tr>
<tr class="separator:afcf83aa74380932f2408c150b806b5fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af6fb1d675035fd353cd2cb97dbdbecc9"><td class="memItemLeft" align="right" valign="top"><a id="af6fb1d675035fd353cd2cb97dbdbecc9"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#af6fb1d675035fd353cd2cb97dbdbecc9">Motor</a> ()</td></tr>
<tr class="memdesc:af6fb1d675035fd353cd2cb97dbdbecc9"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classMotor.xhtml" title="The Motor class operates the PCB-motor. ">Motor</a> the contructor initializes variables and establishes the serial connection. <br /></td></tr>
<tr class="separator:af6fb1d675035fd353cd2cb97dbdbecc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e5e0ed8b8095588a09283200aaeb142"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a3e5e0ed8b8095588a09283200aaeb142">sensordata</a> ()</td></tr>
<tr class="memdesc:a3e5e0ed8b8095588a09283200aaeb142"><td class="mdescLeft">&#160;</td><td class="mdescRight">sensordata returns the current PCBMotor optical encoder wheel sendor state  <a href="#a3e5e0ed8b8095588a09283200aaeb142">More...</a><br /></td></tr>
<tr class="separator:a3e5e0ed8b8095588a09283200aaeb142"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ac64f7613ade081a22859151662b8e866"><td class="memItemLeft" align="right" valign="top"><a id="ac64f7613ade081a22859151662b8e866"></a>
QString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#ac64f7613ade081a22859151662b8e866">publicmotorstatusmessage</a></td></tr>
<tr class="memdesc:ac64f7613ade081a22859151662b8e866"><td class="mdescLeft">&#160;</td><td class="mdescRight">A string containing the current state of the serial connection. <br /></td></tr>
<tr class="separator:ac64f7613ade081a22859151662b8e866"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a830ca5e3e68b7bc0ffb30650d72b8efb"><td class="memItemLeft" align="right" valign="top"><a id="a830ca5e3e68b7bc0ffb30650d72b8efb"></a>
QSerialPort *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a830ca5e3e68b7bc0ffb30650d72b8efb">serial</a></td></tr>
<tr class="memdesc:a830ca5e3e68b7bc0ffb30650d72b8efb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Qt serial connection interface. <br /></td></tr>
<tr class="separator:a830ca5e3e68b7bc0ffb30650d72b8efb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a58e08c8118b2e3272c35086ac6289428"><td class="memItemLeft" align="right" valign="top"><a id="a58e08c8118b2e3272c35086ac6289428"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a58e08c8118b2e3272c35086ac6289428">moveboth</a> ()</td></tr>
<tr class="memdesc:a58e08c8118b2e3272c35086ac6289428"><td class="mdescLeft">&#160;</td><td class="mdescRight">command_moveboth moves both motors connected to the controller <br /></td></tr>
<tr class="separator:a58e08c8118b2e3272c35086ac6289428"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:adbb59f89d592f1569ba8ad05c5c58a73"><td class="memItemLeft" align="right" valign="top">QTimer&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#adbb59f89d592f1569ba8ad05c5c58a73">hometimer</a></td></tr>
<tr class="memdesc:adbb59f89d592f1569ba8ad05c5c58a73"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used to iterate through the steps of 'go to the starting position' - but in an inaccurate way.  <a href="#adbb59f89d592f1569ba8ad05c5c58a73">More...</a><br /></td></tr>
<tr class="separator:adbb59f89d592f1569ba8ad05c5c58a73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97bf769ce21887450f412554520f4f20"><td class="memItemLeft" align="right" valign="top"><a id="a97bf769ce21887450f412554520f4f20"></a>
QTimer&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a97bf769ce21887450f412554520f4f20">bothtimer</a></td></tr>
<tr class="memdesc:a97bf769ce21887450f412554520f4f20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used to iterate through the steps of moving two motors of one controller. <br /></td></tr>
<tr class="separator:a97bf769ce21887450f412554520f4f20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64cf23f01da50ffdfd3c5ba26ad44f1f"><td class="memItemLeft" align="right" valign="top"><a id="a64cf23f01da50ffdfd3c5ba26ad44f1f"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a64cf23f01da50ffdfd3c5ba26ad44f1f">movebothstep</a></td></tr>
<tr class="memdesc:a64cf23f01da50ffdfd3c5ba26ad44f1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Controls logic flow when two motors are to be moved consecutively. <br /></td></tr>
<tr class="separator:a64cf23f01da50ffdfd3c5ba26ad44f1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65cf2259e3d3e61ea7e268b99f8089a0"><td class="memItemLeft" align="right" valign="top"><a id="a65cf2259e3d3e61ea7e268b99f8089a0"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a65cf2259e3d3e61ea7e268b99f8089a0">serialconnectionok</a></td></tr>
<tr class="memdesc:a65cf2259e3d3e61ea7e268b99f8089a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">False if opening the serial connection failed. <br /></td></tr>
<tr class="separator:a65cf2259e3d3e61ea7e268b99f8089a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09aaad8e6e0ea959ac4712677443d8f0"><td class="memItemLeft" align="right" valign="top"><a id="a09aaad8e6e0ea959ac4712677443d8f0"></a>
uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#a09aaad8e6e0ea959ac4712677443d8f0">motor1steps</a></td></tr>
<tr class="memdesc:a09aaad8e6e0ea959ac4712677443d8f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">number of stept the 1st motor is to be moved <br /></td></tr>
<tr class="separator:a09aaad8e6e0ea959ac4712677443d8f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af12031af563931e69915308aa0cce190"><td class="memItemLeft" align="right" valign="top"><a id="af12031af563931e69915308aa0cce190"></a>
uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMotor.xhtml#af12031af563931e69915308aa0cce190">motor2steps</a></td></tr>
<tr class="memdesc:af12031af563931e69915308aa0cce190"><td class="mdescLeft">&#160;</td><td class="mdescRight">number of stept the 2nd motor is to be moved <br /></td></tr>
<tr class="separator:af12031af563931e69915308aa0cce190"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The <a class="el" href="classMotor.xhtml" title="The Motor class operates the PCB-motor. ">Motor</a> class operates the PCB-motor. </p>
<dl class="bug"><dt><b><a class="el" href="bug.xhtml#_bug000004">Bug:</a></b></dt><dd>There are no known bugs.</dd></dl>
<p>The PCBMotor is controllable by sending ASCII commands over a serial connection. This class establishes such a connection and controls the movements of the motor. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="abfbe0b96cfb97107128084ec065e31c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfbe0b96cfb97107128084ec065e31c2">&#9670;&nbsp;</a></span>command_microstep</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Motor::command_microstep </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>nummsteps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>dirstring</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>command_microstep aplies nummsteps micropulses to the motor </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nummsteps</td><td>number of micropulses to apply </td></tr>
    <tr><td class="paramname">dirstring</td><td>string containing the desired direction</td></tr>
  </table>
  </dd>
</dl>
<p>dirstring may either be "bw" of "fw" for backward/forward movement. </p>

</div>
</div>
<a id="a3d179f71c181cbeb3cdb44af166e532d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d179f71c181cbeb3cdb44af166e532d">&#9670;&nbsp;</a></span>command_moveboth</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Motor::command_moveboth </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ang1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ang2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>command_moveboth moves both motors connected to the controller </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ang1</td><td>angle motor 1 is to be moved to </td></tr>
    <tr><td class="paramname">ang2angle</td><td>motor 2 is to be moved to </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae052b079f5bd433c3561eb8b6d772b80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae052b079f5bd433c3561eb8b6d772b80">&#9670;&nbsp;</a></span>command_singlestep</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Motor::command_singlestep </td>
          <td>(</td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>dirstring</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>command_singlestep moves the motor a single step in a direction specified by dirstring </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dirstring</td><td>a string containing the desired movenent direction</td></tr>
  </table>
  </dd>
</dl>
<p>Dirstring may either be "bw" of "fw" for backward/forward movement. </p>

</div>
</div>
<a id="aafbe8e02e29d2a81287747ae09b3d9fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafbe8e02e29d2a81287747ae09b3d9fa">&#9670;&nbsp;</a></span>command_step</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Motor::command_step </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numsteps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>dirstring</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>command_step moves the motor numstep steps in a direction specified by dirstring </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">numsteps</td><td>number of steps to go </td></tr>
    <tr><td class="paramname">dirstring</td><td>direction to go</td></tr>
  </table>
  </dd>
</dl>
<p>Dirstring may either be "bw" of "fw" for backward/forward movement. </p>

</div>
</div>
<a id="a4c95080f6faf87f02844093e948d485a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c95080f6faf87f02844093e948d485a">&#9670;&nbsp;</a></span>handleError</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Motor::handleError </td>
          <td>(</td>
          <td class="paramtype">QSerialPort::SerialPortError&#160;</td>
          <td class="paramname"><em>error</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>handleError prints an error message of the serialport connection and closes the connection </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">error</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6522462ca0730300ca3335090425786b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6522462ca0730300ca3335090425786b">&#9670;&nbsp;</a></span>isopen</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Motor::isopen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>isopen returns the state of the serial connection </p>
<dl class="section return"><dt>Returns</dt><dd>true if serial connection was established successfully, false otherwise </dd></dl>

</div>
</div>
<a id="ad12a639c95a4a33f59118dc8145dc1d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad12a639c95a4a33f59118dc8145dc1d4">&#9670;&nbsp;</a></span>motorstatusmessage</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Motor::motorstatusmessage </td>
          <td>(</td>
          <td class="paramtype">const QString &amp;&#160;</td>
          <td class="paramname"><em>message</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">signal</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>motorstatusmessage emitted when the status of the serial connection changes, with a string indicating the actual state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">message</td><td>the message </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3e5e0ed8b8095588a09283200aaeb142"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e5e0ed8b8095588a09283200aaeb142">&#9670;&nbsp;</a></span>sensordata()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Motor::sensordata </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sensordata returns the current PCBMotor optical encoder wheel sendor state </p>
<dl class="section return"><dt>Returns</dt><dd>the current PCBMotor optical encoder wheel sendor state </dd></dl>

</div>
</div>
<a id="a3d9df9be923b64306fa28dff13ceaa2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d9df9be923b64306fa28dff13ceaa2e">&#9670;&nbsp;</a></span>showStatusMessage</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Motor::showStatusMessage </td>
          <td>(</td>
          <td class="paramtype">const QString &amp;&#160;</td>
          <td class="paramname"><em>message</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>showStatusMessage fills the label in the GUI with text </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">message</td><td>the text to be shown in the label </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9ca6508221ea2c42a5220848ab37df30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ca6508221ea2c42a5220848ab37df30">&#9670;&nbsp;</a></span>stop</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Motor::stop </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>stop</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>stop Tries to stop movenents if possible </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stop</td><td>Input: True if movents shall be stopped if possible </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8305ead4b01433cb8a01eb5440a8b570"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8305ead4b01433cb8a01eb5440a8b570">&#9670;&nbsp;</a></span>write</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Motor::write </td>
          <td>(</td>
          <td class="paramtype">const QByteArray &amp;&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>write writes to the serialport </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>data to be written to the serial port </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="adbb59f89d592f1569ba8ad05c5c58a73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbb59f89d592f1569ba8ad05c5c58a73">&#9670;&nbsp;</a></span>hometimer</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QTimer Motor::hometimer</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Used to iterate through the steps of 'go to the starting position' - but in an inaccurate way. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classMotor.xhtml#a75c8443fde45f5dc88e7bfe12db75a88" title="command_home sends commands to position at the mechanical stop and afterwards go to the offset starti...">command_home()</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="motor_8h_source.xhtml">motor.h</a></li>
<li>motor.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
