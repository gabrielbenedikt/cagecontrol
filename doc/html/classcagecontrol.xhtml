<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>CageControl: cagecontrol Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">CageControl
   &#160;<span id="projectnumber">Control waveplates inside tomography cages</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-slots">Public Slots</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-slots">Private Slots</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classcagecontrol-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">cagecontrol Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for cagecontrol:</div>
<div class="dyncontent">
<div class="center"><img src="classcagecontrol__inherit__graph.png" border="0" usemap="#cagecontrol_inherit__map" alt="Inheritance graph"/></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for cagecontrol:</div>
<div class="dyncontent">
<div class="center"><img src="classcagecontrol__coll__graph.png" border="0" usemap="#cagecontrol_coll__map" alt="Collaboration graph"/></div>
<map name="cagecontrol_coll__map" id="cagecontrol_coll__map">
<area shape="rect" id="node3" href="classUDPlistener.xhtml" title="The UDPlistener class is used to control dinspect with UDP packages. " alt="" coords="136,81,229,108"/>
</map>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-slots"></a>
Public Slots</h2></td></tr>
<tr class="memitem:a27d63224f95901dbbe8560cd88c90bca"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a27d63224f95901dbbe8560cd88c90bca">slot_changeWPangles</a> (QVector&lt; double &gt; angles)</td></tr>
<tr class="memdesc:a27d63224f95901dbbe8560cd88c90bca"><td class="mdescLeft">&#160;</td><td class="mdescRight">slot_changeWPangles sets offsetangles for all waveplates  <a href="#a27d63224f95901dbbe8560cd88c90bca">More...</a><br /></td></tr>
<tr class="separator:a27d63224f95901dbbe8560cd88c90bca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e106a12191172da2780a3d7fe137041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a2e106a12191172da2780a3d7fe137041">slot_changeoffsetusage</a> (bool uo_in)</td></tr>
<tr class="memdesc:a2e106a12191172da2780a3d7fe137041"><td class="mdescLeft">&#160;</td><td class="mdescRight">slot_changeoffsetusage changes the usage of the waveplate offset  <a href="#a2e106a12191172da2780a3d7fe137041">More...</a><br /></td></tr>
<tr class="separator:a2e106a12191172da2780a3d7fe137041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9a2772a38394159c54d7e5d7f2a86fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#af9a2772a38394159c54d7e5d7f2a86fb">slot_moveHV</a> (QString color)</td></tr>
<tr class="memdesc:af9a2772a38394159c54d7e5d7f2a86fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveHV  <a href="#af9a2772a38394159c54d7e5d7f2a86fb">More...</a><br /></td></tr>
<tr class="separator:af9a2772a38394159c54d7e5d7f2a86fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3207f15cba9458e32fb5c2cf366c4b44"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a3207f15cba9458e32fb5c2cf366c4b44">slot_movePM</a> (QString color)</td></tr>
<tr class="memdesc:a3207f15cba9458e32fb5c2cf366c4b44"><td class="mdescLeft">&#160;</td><td class="mdescRight">movePM  <a href="#a3207f15cba9458e32fb5c2cf366c4b44">More...</a><br /></td></tr>
<tr class="separator:a3207f15cba9458e32fb5c2cf366c4b44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a138905383fdc09a0b5077a185eaf6682"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a138905383fdc09a0b5077a185eaf6682">slot_moveLR</a> (QString color)</td></tr>
<tr class="memdesc:a138905383fdc09a0b5077a185eaf6682"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveLR  <a href="#a138905383fdc09a0b5077a185eaf6682">More...</a><br /></td></tr>
<tr class="separator:a138905383fdc09a0b5077a185eaf6682"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d971435af3267351272b2c2d5f2f709"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a2d971435af3267351272b2c2d5f2f709">slot_movemotors</a> (QString color, double HWPang, double QWPang)</td></tr>
<tr class="memdesc:a2d971435af3267351272b2c2d5f2f709"><td class="mdescLeft">&#160;</td><td class="mdescRight">movemotors  <a href="#a2d971435af3267351272b2c2d5f2f709">More...</a><br /></td></tr>
<tr class="separator:a2d971435af3267351272b2c2d5f2f709"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6630362ef3dd621859126e357e545dd5"><td class="memItemLeft" align="right" valign="top"><a id="a6630362ef3dd621859126e357e545dd5"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>cagecontrol</b> (QWidget *parent=nullptr)</td></tr>
<tr class="separator:a6630362ef3dd621859126e357e545dd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-slots"></a>
Private Slots</h2></td></tr>
<tr class="memitem:a244c02598b4b73db82b5852561634084"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a244c02598b4b73db82b5852561634084">updatesettings</a> (double d)</td></tr>
<tr class="memdesc:a244c02598b4b73db82b5852561634084"><td class="mdescLeft">&#160;</td><td class="mdescRight">updatesettings fills variables with data from GUI  <a href="#a244c02598b4b73db82b5852561634084">More...</a><br /></td></tr>
<tr class="separator:a244c02598b4b73db82b5852561634084"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cfb7b65a7b8838d5f2acaa384a7cfcc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a2cfb7b65a7b8838d5f2acaa384a7cfcc">updatesettingsint</a> (int i)</td></tr>
<tr class="memdesc:a2cfb7b65a7b8838d5f2acaa384a7cfcc"><td class="mdescLeft">&#160;</td><td class="mdescRight">updatesettingsint wrapper, just calls  <a href="#a2cfb7b65a7b8838d5f2acaa384a7cfcc">More...</a><br /></td></tr>
<tr class="separator:a2cfb7b65a7b8838d5f2acaa384a7cfcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6993b1b41f55c164298c1b3e067ab34"><td class="memItemLeft" align="right" valign="top"><a id="ab6993b1b41f55c164298c1b3e067ab34"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#ab6993b1b41f55c164298c1b3e067ab34">updateUI</a> ()</td></tr>
<tr class="memdesc:ab6993b1b41f55c164298c1b3e067ab34"><td class="mdescLeft">&#160;</td><td class="mdescRight">updateUI updates UI with supposedly new numbers (loaded from conf file, e.g.) <br /></td></tr>
<tr class="separator:ab6993b1b41f55c164298c1b3e067ab34"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a79a089c4e7196a7c158aa62f4883ba18"><td class="memItemLeft" align="right" valign="top"><a id="a79a089c4e7196a7c158aa62f4883ba18"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a79a089c4e7196a7c158aa62f4883ba18">setupUI</a> (QGridLayout *layout)</td></tr>
<tr class="memdesc:a79a089c4e7196a7c158aa62f4883ba18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Puts together the GUI. <br /></td></tr>
<tr class="separator:a79a089c4e7196a7c158aa62f4883ba18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae961f42ea421a8d512964f158b0201e8"><td class="memItemLeft" align="right" valign="top"><a id="ae961f42ea421a8d512964f158b0201e8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#ae961f42ea421a8d512964f158b0201e8">openmotors</a> ()</td></tr>
<tr class="memdesc:ae961f42ea421a8d512964f158b0201e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Opens serial connections to the PCB motor controlllers. <br /></td></tr>
<tr class="separator:ae961f42ea421a8d512964f158b0201e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab3dedc2c4b814569988c93bd30546c7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#aab3dedc2c4b814569988c93bd30546c7">updatestatus</a> (QString msg)</td></tr>
<tr class="memdesc:aab3dedc2c4b814569988c93bd30546c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">updatestatus writes message to statusbar and to a logfile  <a href="#aab3dedc2c4b814569988c93bd30546c7">More...</a><br /></td></tr>
<tr class="separator:aab3dedc2c4b814569988c93bd30546c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e6648cef5e6d08d638aa2472824cb6b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a0e6648cef5e6d08d638aa2472824cb6b">LoadConfig</a> ()</td></tr>
<tr class="memdesc:a0e6648cef5e6d08d638aa2472824cb6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">LoadConfig loads config from a file.  <a href="#a0e6648cef5e6d08d638aa2472824cb6b">More...</a><br /></td></tr>
<tr class="separator:a0e6648cef5e6d08d638aa2472824cb6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a217d948983c0d1c153d29c728b06d764"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a217d948983c0d1c153d29c728b06d764">SaveConfig</a> ()</td></tr>
<tr class="memdesc:a217d948983c0d1c153d29c728b06d764"><td class="mdescLeft">&#160;</td><td class="mdescRight">SaveConfig stores config to a file.  <a href="#a217d948983c0d1c153d29c728b06d764">More...</a><br /></td></tr>
<tr class="separator:a217d948983c0d1c153d29c728b06d764"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fd60ea2aa138472e3714dbd25cadc55"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a2fd60ea2aa138472e3714dbd25cadc55">motorGB</a> (QGroupBox *gb, QString id)</td></tr>
<tr class="memdesc:a2fd60ea2aa138472e3714dbd25cadc55"><td class="mdescLeft">&#160;</td><td class="mdescRight">motorGB fills an empty QGroupBox with motor controls  <a href="#a2fd60ea2aa138472e3714dbd25cadc55">More...</a><br /></td></tr>
<tr class="separator:a2fd60ea2aa138472e3714dbd25cadc55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56c01018dbd0d16a360106c438539c9e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a56c01018dbd0d16a360106c438539c9e">initconnections</a> ()</td></tr>
<tr class="memdesc:a56c01018dbd0d16a360106c438539c9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">initconnections connects Qt Signals to slots  <a href="#a56c01018dbd0d16a360106c438539c9e">More...</a><br /></td></tr>
<tr class="separator:a56c01018dbd0d16a360106c438539c9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e2c79dc05f66b2b15ae01eaa8d39fca"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a4e2c79dc05f66b2b15ae01eaa8d39fca">movemotor</a> (QString motor, double HWPang, double QWPang)</td></tr>
<tr class="memdesc:a4e2c79dc05f66b2b15ae01eaa8d39fca"><td class="mdescLeft">&#160;</td><td class="mdescRight">movemotor moves both motors of a cage to certain angles  <a href="#a4e2c79dc05f66b2b15ae01eaa8d39fca">More...</a><br /></td></tr>
<tr class="separator:a4e2c79dc05f66b2b15ae01eaa8d39fca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb242e48298555a31dcff17bff83b885"><td class="memItemLeft" align="right" valign="top"><a id="acb242e48298555a31dcff17bff83b885"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#acb242e48298555a31dcff17bff83b885">moveredHV</a> ()</td></tr>
<tr class="memdesc:acb242e48298555a31dcff17bff83b885"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveredHV moves red cage to HV basis <br /></td></tr>
<tr class="separator:acb242e48298555a31dcff17bff83b885"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0a1c61636bd51739426e43efd488620"><td class="memItemLeft" align="right" valign="top"><a id="ac0a1c61636bd51739426e43efd488620"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#ac0a1c61636bd51739426e43efd488620">moveredPM</a> ()</td></tr>
<tr class="memdesc:ac0a1c61636bd51739426e43efd488620"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveredPM moves red cage to PM basis <br /></td></tr>
<tr class="separator:ac0a1c61636bd51739426e43efd488620"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a231f0b4dd0ab808172edc9655c5cd508"><td class="memItemLeft" align="right" valign="top"><a id="a231f0b4dd0ab808172edc9655c5cd508"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a231f0b4dd0ab808172edc9655c5cd508">moveredLR</a> ()</td></tr>
<tr class="memdesc:a231f0b4dd0ab808172edc9655c5cd508"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveredLR moves red cage to RL basis <br /></td></tr>
<tr class="separator:a231f0b4dd0ab808172edc9655c5cd508"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fc1b98fb22ede9c62c72dec1a228727"><td class="memItemLeft" align="right" valign="top"><a id="a2fc1b98fb22ede9c62c72dec1a228727"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a2fc1b98fb22ede9c62c72dec1a228727">moveredANG</a> ()</td></tr>
<tr class="memdesc:a2fc1b98fb22ede9c62c72dec1a228727"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveredANG moves red cage to the angles set in the GUI <br /></td></tr>
<tr class="separator:a2fc1b98fb22ede9c62c72dec1a228727"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88d660f6b66569caf3b78ad9538b0826"><td class="memItemLeft" align="right" valign="top"><a id="a88d660f6b66569caf3b78ad9538b0826"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a88d660f6b66569caf3b78ad9538b0826">movebrownHV</a> ()</td></tr>
<tr class="memdesc:a88d660f6b66569caf3b78ad9538b0826"><td class="mdescLeft">&#160;</td><td class="mdescRight">movebrownHV moves brown cage to HV basis <br /></td></tr>
<tr class="separator:a88d660f6b66569caf3b78ad9538b0826"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a929fc957acccf06e36c11af32b49168b"><td class="memItemLeft" align="right" valign="top"><a id="a929fc957acccf06e36c11af32b49168b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a929fc957acccf06e36c11af32b49168b">movebrownPM</a> ()</td></tr>
<tr class="memdesc:a929fc957acccf06e36c11af32b49168b"><td class="mdescLeft">&#160;</td><td class="mdescRight">movebrownPM moves brown cage to PM basis <br /></td></tr>
<tr class="separator:a929fc957acccf06e36c11af32b49168b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa146d98da4d107f29b086c4136d05f58"><td class="memItemLeft" align="right" valign="top"><a id="aa146d98da4d107f29b086c4136d05f58"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#aa146d98da4d107f29b086c4136d05f58">movebrownLR</a> ()</td></tr>
<tr class="memdesc:aa146d98da4d107f29b086c4136d05f58"><td class="mdescLeft">&#160;</td><td class="mdescRight">movebrownLR moves brown cage to RL basis <br /></td></tr>
<tr class="separator:aa146d98da4d107f29b086c4136d05f58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fe48c38d5ed672375ba50aa52c4671e"><td class="memItemLeft" align="right" valign="top"><a id="a8fe48c38d5ed672375ba50aa52c4671e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a8fe48c38d5ed672375ba50aa52c4671e">movebrownANG</a> ()</td></tr>
<tr class="memdesc:a8fe48c38d5ed672375ba50aa52c4671e"><td class="mdescLeft">&#160;</td><td class="mdescRight">movebrownANG moves brown cage to the angles set in the GUI <br /></td></tr>
<tr class="separator:a8fe48c38d5ed672375ba50aa52c4671e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4185b8a7157c810beb1533dba201e2d"><td class="memItemLeft" align="right" valign="top"><a id="af4185b8a7157c810beb1533dba201e2d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#af4185b8a7157c810beb1533dba201e2d">movegreenHV</a> ()</td></tr>
<tr class="memdesc:af4185b8a7157c810beb1533dba201e2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">movegreenHV moves green cage to HV basis <br /></td></tr>
<tr class="separator:af4185b8a7157c810beb1533dba201e2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea81bb0a641e220fd5f6f01baba0b222"><td class="memItemLeft" align="right" valign="top"><a id="aea81bb0a641e220fd5f6f01baba0b222"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#aea81bb0a641e220fd5f6f01baba0b222">movegreenPM</a> ()</td></tr>
<tr class="memdesc:aea81bb0a641e220fd5f6f01baba0b222"><td class="mdescLeft">&#160;</td><td class="mdescRight">movegreenPM moves green cage to PM basis <br /></td></tr>
<tr class="separator:aea81bb0a641e220fd5f6f01baba0b222"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa00c694cc43ef792b86e3cff4907a41d"><td class="memItemLeft" align="right" valign="top"><a id="aa00c694cc43ef792b86e3cff4907a41d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#aa00c694cc43ef792b86e3cff4907a41d">movegreenLR</a> ()</td></tr>
<tr class="memdesc:aa00c694cc43ef792b86e3cff4907a41d"><td class="mdescLeft">&#160;</td><td class="mdescRight">movegreenLR moves green cage to RL basis <br /></td></tr>
<tr class="separator:aa00c694cc43ef792b86e3cff4907a41d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0643d9578dcd3e704093232711e22132"><td class="memItemLeft" align="right" valign="top"><a id="a0643d9578dcd3e704093232711e22132"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a0643d9578dcd3e704093232711e22132">movegreenANG</a> ()</td></tr>
<tr class="memdesc:a0643d9578dcd3e704093232711e22132"><td class="mdescLeft">&#160;</td><td class="mdescRight">movegreenANG moves green cage to the angles set in the GUI <br /></td></tr>
<tr class="separator:a0643d9578dcd3e704093232711e22132"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a195d4aad32491eef569c51f2ba50bb76"><td class="memItemLeft" align="right" valign="top"><a id="a195d4aad32491eef569c51f2ba50bb76"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a195d4aad32491eef569c51f2ba50bb76">moveblueHV</a> ()</td></tr>
<tr class="memdesc:a195d4aad32491eef569c51f2ba50bb76"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveblueHV moves blue cage to HV basis <br /></td></tr>
<tr class="separator:a195d4aad32491eef569c51f2ba50bb76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0930283133bafaff0990c183ac7b99a7"><td class="memItemLeft" align="right" valign="top"><a id="a0930283133bafaff0990c183ac7b99a7"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a0930283133bafaff0990c183ac7b99a7">movebluePM</a> ()</td></tr>
<tr class="memdesc:a0930283133bafaff0990c183ac7b99a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">movebluePM moves blue cage to PM basis <br /></td></tr>
<tr class="separator:a0930283133bafaff0990c183ac7b99a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad51fd091c85c84f4f3fa1e41f14c8840"><td class="memItemLeft" align="right" valign="top"><a id="ad51fd091c85c84f4f3fa1e41f14c8840"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#ad51fd091c85c84f4f3fa1e41f14c8840">moveblueLR</a> ()</td></tr>
<tr class="memdesc:ad51fd091c85c84f4f3fa1e41f14c8840"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveblueLR moves blue cage to RL basis <br /></td></tr>
<tr class="separator:ad51fd091c85c84f4f3fa1e41f14c8840"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6396cf94a2350fdf9c477e755a8c786"><td class="memItemLeft" align="right" valign="top"><a id="ac6396cf94a2350fdf9c477e755a8c786"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#ac6396cf94a2350fdf9c477e755a8c786">moveblueANG</a> ()</td></tr>
<tr class="memdesc:ac6396cf94a2350fdf9c477e755a8c786"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveblueANG moves white cage to the angles set in the GUI <br /></td></tr>
<tr class="separator:ac6396cf94a2350fdf9c477e755a8c786"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ab679ff1453b8992b632185e753faf7"><td class="memItemLeft" align="right" valign="top"><a id="a4ab679ff1453b8992b632185e753faf7"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a4ab679ff1453b8992b632185e753faf7">movewhiteHV</a> ()</td></tr>
<tr class="memdesc:a4ab679ff1453b8992b632185e753faf7"><td class="mdescLeft">&#160;</td><td class="mdescRight">movewhiteHV moves white cage to HV basis <br /></td></tr>
<tr class="separator:a4ab679ff1453b8992b632185e753faf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac77a1ff1b29de6c0abff88d767ae4474"><td class="memItemLeft" align="right" valign="top"><a id="ac77a1ff1b29de6c0abff88d767ae4474"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#ac77a1ff1b29de6c0abff88d767ae4474">movewhitePM</a> ()</td></tr>
<tr class="memdesc:ac77a1ff1b29de6c0abff88d767ae4474"><td class="mdescLeft">&#160;</td><td class="mdescRight">movewhitePM moves white cage to PM basis <br /></td></tr>
<tr class="separator:ac77a1ff1b29de6c0abff88d767ae4474"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c9eb314a6f9ab6679d29e2a9c86fe0a"><td class="memItemLeft" align="right" valign="top"><a id="a9c9eb314a6f9ab6679d29e2a9c86fe0a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a9c9eb314a6f9ab6679d29e2a9c86fe0a">movewhiteLR</a> ()</td></tr>
<tr class="memdesc:a9c9eb314a6f9ab6679d29e2a9c86fe0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">movewhiteLR moves white cage to RL basis <br /></td></tr>
<tr class="separator:a9c9eb314a6f9ab6679d29e2a9c86fe0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae28a686ab880f2164b50872acf5a4c35"><td class="memItemLeft" align="right" valign="top"><a id="ae28a686ab880f2164b50872acf5a4c35"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#ae28a686ab880f2164b50872acf5a4c35">movewhiteANG</a> ()</td></tr>
<tr class="memdesc:ae28a686ab880f2164b50872acf5a4c35"><td class="mdescLeft">&#160;</td><td class="mdescRight">movewhiteANG moves black cage to the angles set in the GUI <br /></td></tr>
<tr class="separator:ae28a686ab880f2164b50872acf5a4c35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a432cbc27c9981b81c218163f26972daa"><td class="memItemLeft" align="right" valign="top"><a id="a432cbc27c9981b81c218163f26972daa"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a432cbc27c9981b81c218163f26972daa">moveblackHV</a> ()</td></tr>
<tr class="memdesc:a432cbc27c9981b81c218163f26972daa"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveblackHV moves black cage to HV basis <br /></td></tr>
<tr class="separator:a432cbc27c9981b81c218163f26972daa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42a9180358270c4b5a2e3bf8fe8dd016"><td class="memItemLeft" align="right" valign="top"><a id="a42a9180358270c4b5a2e3bf8fe8dd016"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a42a9180358270c4b5a2e3bf8fe8dd016">moveblackPM</a> ()</td></tr>
<tr class="memdesc:a42a9180358270c4b5a2e3bf8fe8dd016"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveblackPM moves black cage to PM basis <br /></td></tr>
<tr class="separator:a42a9180358270c4b5a2e3bf8fe8dd016"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a776a75fb1b9b680a0e99f5332446d616"><td class="memItemLeft" align="right" valign="top"><a id="a776a75fb1b9b680a0e99f5332446d616"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a776a75fb1b9b680a0e99f5332446d616">moveblackLR</a> ()</td></tr>
<tr class="memdesc:a776a75fb1b9b680a0e99f5332446d616"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveblackLR moves black cage to RL basis <br /></td></tr>
<tr class="separator:a776a75fb1b9b680a0e99f5332446d616"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1ded3bab80cf942c1662b371b4aa9ce"><td class="memItemLeft" align="right" valign="top"><a id="ae1ded3bab80cf942c1662b371b4aa9ce"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#ae1ded3bab80cf942c1662b371b4aa9ce">moveblackANG</a> ()</td></tr>
<tr class="memdesc:ae1ded3bab80cf942c1662b371b4aa9ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveblackANG <br /></td></tr>
<tr class="separator:ae1ded3bab80cf942c1662b371b4aa9ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79f7b716a9b1a49ade6dd35879af6947"><td class="memItemLeft" align="right" valign="top"><a id="a79f7b716a9b1a49ade6dd35879af6947"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a79f7b716a9b1a49ade6dd35879af6947">moveallhv</a> ()</td></tr>
<tr class="memdesc:a79f7b716a9b1a49ade6dd35879af6947"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveallhv <br /></td></tr>
<tr class="separator:a79f7b716a9b1a49ade6dd35879af6947"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3f9b4e3937ffc7eca65edac02d5d4db"><td class="memItemLeft" align="right" valign="top"><a id="aa3f9b4e3937ffc7eca65edac02d5d4db"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#aa3f9b4e3937ffc7eca65edac02d5d4db">moveallpm</a> ()</td></tr>
<tr class="memdesc:aa3f9b4e3937ffc7eca65edac02d5d4db"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveallpm <br /></td></tr>
<tr class="separator:aa3f9b4e3937ffc7eca65edac02d5d4db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af50e9b09c4c2b5d6a7dd6a5fe5fe7d4d"><td class="memItemLeft" align="right" valign="top"><a id="af50e9b09c4c2b5d6a7dd6a5fe5fe7d4d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#af50e9b09c4c2b5d6a7dd6a5fe5fe7d4d">movealllr</a> ()</td></tr>
<tr class="memdesc:af50e9b09c4c2b5d6a7dd6a5fe5fe7d4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">movealllr <br /></td></tr>
<tr class="separator:af50e9b09c4c2b5d6a7dd6a5fe5fe7d4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea25e1e2eabc1accdc10536f34e0472d"><td class="memItemLeft" align="right" valign="top"><a id="aea25e1e2eabc1accdc10536f34e0472d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#aea25e1e2eabc1accdc10536f34e0472d">moveallarb</a> ()</td></tr>
<tr class="memdesc:aea25e1e2eabc1accdc10536f34e0472d"><td class="mdescLeft">&#160;</td><td class="mdescRight">moveallarb <br /></td></tr>
<tr class="separator:aea25e1e2eabc1accdc10536f34e0472d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:ae73f9b22e1cc81ef92d900b8c63b4663"><td class="memItemLeft" align="right" valign="top"><a id="ae73f9b22e1cc81ef92d900b8c63b4663"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#ae73f9b22e1cc81ef92d900b8c63b4663">udpport</a></td></tr>
<tr class="memdesc:ae73f9b22e1cc81ef92d900b8c63b4663"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hold the UDP port to listen to for commandds. <br /></td></tr>
<tr class="separator:ae73f9b22e1cc81ef92d900b8c63b4663"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadbcbafcce2b4e49b83560d308086f87"><td class="memItemLeft" align="right" valign="top"><a id="aadbcbafcce2b4e49b83560d308086f87"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#aadbcbafcce2b4e49b83560d308086f87">pauseupdating</a></td></tr>
<tr class="memdesc:aadbcbafcce2b4e49b83560d308086f87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Keep updateUI and updatesettings from interfering with each other. <br /></td></tr>
<tr class="separator:aadbcbafcce2b4e49b83560d308086f87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaae4d96e61ebe50baf65014003208ac0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#aaae4d96e61ebe50baf65014003208ac0">useoffset</a></td></tr>
<tr class="memdesc:aaae4d96e61ebe50baf65014003208ac0"><td class="mdescLeft">&#160;</td><td class="mdescRight">If true, the angles in the settings-tab will be used as '0'.  <a href="#aaae4d96e61ebe50baf65014003208ac0">More...</a><br /></td></tr>
<tr class="separator:aaae4d96e61ebe50baf65014003208ac0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa56b3d1bbf35785c21c5465eef48185"><td class="memItemLeft" align="right" valign="top"><a id="aaa56b3d1bbf35785c21c5465eef48185"></a>
QSettings *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#aaa56b3d1bbf35785c21c5465eef48185">settings</a></td></tr>
<tr class="memdesc:aaa56b3d1bbf35785c21c5465eef48185"><td class="mdescLeft">&#160;</td><td class="mdescRight">A QSettings object, used to store settings in a config file. <br /></td></tr>
<tr class="separator:aaa56b3d1bbf35785c21c5465eef48185"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c281db6d7f0de7964c49bac0d5823b7"><td class="memItemLeft" align="right" valign="top"><a id="a6c281db6d7f0de7964c49bac0d5823b7"></a>
<a class="el" href="classUDPlistener.xhtml">UDPlistener</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a6c281db6d7f0de7964c49bac0d5823b7">udplistener</a></td></tr>
<tr class="memdesc:a6c281db6d7f0de7964c49bac0d5823b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Listens to a UDP port, aquiires &amp; checks commands send to it. <br /></td></tr>
<tr class="separator:a6c281db6d7f0de7964c49bac0d5823b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc80d835c69ca52a62f18c341c2bd009"><td class="memItemLeft" align="right" valign="top"><a id="abc80d835c69ca52a62f18c341c2bd009"></a>
QTabWidget *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#abc80d835c69ca52a62f18c341c2bd009">tabs</a></td></tr>
<tr class="memdesc:abc80d835c69ca52a62f18c341c2bd009"><td class="mdescLeft">&#160;</td><td class="mdescRight">GUI tab widget. <br /></td></tr>
<tr class="separator:abc80d835c69ca52a62f18c341c2bd009"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5350ebcf40a0c709af82276e6ce2284d"><td class="memItemLeft" align="right" valign="top"><a id="a5350ebcf40a0c709af82276e6ce2284d"></a>
QWidget *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a5350ebcf40a0c709af82276e6ce2284d">settingstab</a></td></tr>
<tr class="memdesc:a5350ebcf40a0c709af82276e6ce2284d"><td class="mdescLeft">&#160;</td><td class="mdescRight">GUI tab containing settings. <br /></td></tr>
<tr class="separator:a5350ebcf40a0c709af82276e6ce2284d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c0bb2384100cced3b96363cca8e5428"><td class="memItemLeft" align="right" valign="top"><a id="a9c0bb2384100cced3b96363cca8e5428"></a>
QWidget *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a9c0bb2384100cced3b96363cca8e5428">motorstab</a></td></tr>
<tr class="memdesc:a9c0bb2384100cced3b96363cca8e5428"><td class="mdescLeft">&#160;</td><td class="mdescRight">GUI tab containing motor controls. <br /></td></tr>
<tr class="separator:a9c0bb2384100cced3b96363cca8e5428"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18d5a48b8893f88b9b660c9c08e92f9b"><td class="memItemLeft" align="right" valign="top"><a id="a18d5a48b8893f88b9b660c9c08e92f9b"></a>
QStatusBar *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a18d5a48b8893f88b9b660c9c08e92f9b">status</a></td></tr>
<tr class="memdesc:a18d5a48b8893f88b9b660c9c08e92f9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Status bar. <br /></td></tr>
<tr class="separator:a18d5a48b8893f88b9b660c9c08e92f9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fa2f1480f616b4f7142f9e7a471cef3"><td class="memItemLeft" align="right" valign="top"><a id="a1fa2f1480f616b4f7142f9e7a471cef3"></a>
QVector&lt; QString &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a1fa2f1480f616b4f7142f9e7a471cef3">comports</a></td></tr>
<tr class="memdesc:a1fa2f1480f616b4f7142f9e7a471cef3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Vector containing available serial ports names ports. <br /></td></tr>
<tr class="separator:a1fa2f1480f616b4f7142f9e7a471cef3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a78cb0c0f45a8bb3e6b093ef7412124"><td class="memItemLeft" align="right" valign="top"><a id="a3a78cb0c0f45a8bb3e6b093ef7412124"></a>
QVector&lt; bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a3a78cb0c0f45a8bb3e6b093ef7412124">invert</a></td></tr>
<tr class="memdesc:a3a78cb0c0f45a8bb3e6b093ef7412124"><td class="mdescLeft">&#160;</td><td class="mdescRight">True: invert predefined bases (H/V -&gt; V/H, P/M-&gt;M/P, L/R-&gt;R/L) <br /></td></tr>
<tr class="separator:a3a78cb0c0f45a8bb3e6b093ef7412124"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c4968b6ced27c21dafbc9c804e96ba0"><td class="memItemLeft" align="right" valign="top"><a id="a8c4968b6ced27c21dafbc9c804e96ba0"></a>
QVector&lt; <a class="el" href="classMotor.xhtml">Motor</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a8c4968b6ced27c21dafbc9c804e96ba0">motors</a></td></tr>
<tr class="memdesc:a8c4968b6ced27c21dafbc9c804e96ba0"><td class="mdescLeft">&#160;</td><td class="mdescRight">List of serial connections to the cages. <br /></td></tr>
<tr class="separator:a8c4968b6ced27c21dafbc9c804e96ba0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e87cb65e7cd3b01bb35709ee62e5226"><td class="memItemLeft" align="right" valign="top"><a id="a8e87cb65e7cd3b01bb35709ee62e5226"></a>
QVector&lt; QString &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a8e87cb65e7cd3b01bb35709ee62e5226">motorName</a></td></tr>
<tr class="memdesc:a8e87cb65e7cd3b01bb35709ee62e5226"><td class="mdescLeft">&#160;</td><td class="mdescRight">List of colorcodes of the cages. <br /></td></tr>
<tr class="separator:a8e87cb65e7cd3b01bb35709ee62e5226"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5af27745d1d9e0b9411d8445f5648e74"><td class="memItemLeft" align="right" valign="top"><a id="a5af27745d1d9e0b9411d8445f5648e74"></a>
QVector&lt; QDoubleSpinBox &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a5af27745d1d9e0b9411d8445f5648e74">HWP0sp</a></td></tr>
<tr class="memdesc:a5af27745d1d9e0b9411d8445f5648e74"><td class="mdescLeft">&#160;</td><td class="mdescRight">List of QSpinBoxes to set the '0' of the HWPs. <br /></td></tr>
<tr class="separator:a5af27745d1d9e0b9411d8445f5648e74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a026cbda0584d3b18cab5c30fec167ce2"><td class="memItemLeft" align="right" valign="top"><a id="a026cbda0584d3b18cab5c30fec167ce2"></a>
QVector&lt; QDoubleSpinBox &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a026cbda0584d3b18cab5c30fec167ce2">QWP0sp</a></td></tr>
<tr class="memdesc:a026cbda0584d3b18cab5c30fec167ce2"><td class="mdescLeft">&#160;</td><td class="mdescRight">List of QSpinBoxes to set the '0' of the QWPs. <br /></td></tr>
<tr class="separator:a026cbda0584d3b18cab5c30fec167ce2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ed383394220bea867589a6e7939156f"><td class="memItemLeft" align="right" valign="top"><a id="a2ed383394220bea867589a6e7939156f"></a>
QVector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a2ed383394220bea867589a6e7939156f">HWPmnum</a></td></tr>
<tr class="memdesc:a2ed383394220bea867589a6e7939156f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Motornumber of controller the HWP is connected to. <br /></td></tr>
<tr class="separator:a2ed383394220bea867589a6e7939156f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ecfc817dfe853a073e6b11b3ac9c53c"><td class="memItemLeft" align="right" valign="top"><a id="a0ecfc817dfe853a073e6b11b3ac9c53c"></a>
QVector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a0ecfc817dfe853a073e6b11b3ac9c53c">QWPmnum</a></td></tr>
<tr class="memdesc:a0ecfc817dfe853a073e6b11b3ac9c53c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Motornumber of controller the QWP is connected to. <br /></td></tr>
<tr class="separator:a0ecfc817dfe853a073e6b11b3ac9c53c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89582491b0b4f2421abe2e7cad735505"><td class="memItemLeft" align="right" valign="top"><a id="a89582491b0b4f2421abe2e7cad735505"></a>
QVector&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a89582491b0b4f2421abe2e7cad735505">HWP0</a></td></tr>
<tr class="memdesc:a89582491b0b4f2421abe2e7cad735505"><td class="mdescLeft">&#160;</td><td class="mdescRight">'0' of HWPs <br /></td></tr>
<tr class="separator:a89582491b0b4f2421abe2e7cad735505"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f1fca7829c5e2c25e6a15969aa9a622"><td class="memItemLeft" align="right" valign="top"><a id="a6f1fca7829c5e2c25e6a15969aa9a622"></a>
QVector&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a6f1fca7829c5e2c25e6a15969aa9a622">QWP0</a></td></tr>
<tr class="memdesc:a6f1fca7829c5e2c25e6a15969aa9a622"><td class="mdescLeft">&#160;</td><td class="mdescRight">'0' of QWPs <br /></td></tr>
<tr class="separator:a6f1fca7829c5e2c25e6a15969aa9a622"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1502c9ebc5e04d61af76492d563f9e0e"><td class="memItemLeft" align="right" valign="top"><a id="a1502c9ebc5e04d61af76492d563f9e0e"></a>
QVector&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a1502c9ebc5e04d61af76492d563f9e0e">HWPcust</a></td></tr>
<tr class="memdesc:a1502c9ebc5e04d61af76492d563f9e0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">custum set angle to rotate HWP to <br /></td></tr>
<tr class="separator:a1502c9ebc5e04d61af76492d563f9e0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43e35156274c70bda842d25680a9159d"><td class="memItemLeft" align="right" valign="top"><a id="a43e35156274c70bda842d25680a9159d"></a>
QVector&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#a43e35156274c70bda842d25680a9159d">QWPcust</a></td></tr>
<tr class="memdesc:a43e35156274c70bda842d25680a9159d"><td class="mdescLeft">&#160;</td><td class="mdescRight">custom set angle to rotate QWP to <br /></td></tr>
<tr class="separator:a43e35156274c70bda842d25680a9159d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aced71e7c8e0053e6d4291bcee17c9af7"><td class="memItemLeft" align="right" valign="top"><a id="aced71e7c8e0053e6d4291bcee17c9af7"></a>
QVector&lt; QGroupBox * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcagecontrol.xhtml#aced71e7c8e0053e6d4291bcee17c9af7">uiMotorGroupBoxes</a></td></tr>
<tr class="memdesc:aced71e7c8e0053e6d4291bcee17c9af7"><td class="mdescLeft">&#160;</td><td class="mdescRight">List of Groupboxes containing cage controls. <br /></td></tr>
<tr class="separator:aced71e7c8e0053e6d4291bcee17c9af7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a56c01018dbd0d16a360106c438539c9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56c01018dbd0d16a360106c438539c9e">&#9670;&nbsp;</a></span>initconnections()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cagecontrol::initconnections </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>initconnections connects Qt Signals to slots </p>
<p>Defines what happens when a button is clicked, a number is changet, et cetera </p>

</div>
</div>
<a id="a0e6648cef5e6d08d638aa2472824cb6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e6648cef5e6d08d638aa2472824cb6b">&#9670;&nbsp;</a></span>LoadConfig()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cagecontrol::LoadConfig </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>LoadConfig loads config from a file. </p>
<p>The dialog is set up with values already stored in the QSettings object. If a specific quantity does not exist there, it is set to a standard value. </p>

</div>
</div>
<a id="a2fd60ea2aa138472e3714dbd25cadc55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fd60ea2aa138472e3714dbd25cadc55">&#9670;&nbsp;</a></span>motorGB()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cagecontrol::motorGB </td>
          <td>(</td>
          <td class="paramtype">QGroupBox *&#160;</td>
          <td class="paramname"><em>gb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>motorGB fills an empty QGroupBox with motor controls </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">gb</td><td>empty QGroupBox </td></tr>
    <tr><td class="paramname">id</td><td>colorcode of the cage </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4e2c79dc05f66b2b15ae01eaa8d39fca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e2c79dc05f66b2b15ae01eaa8d39fca">&#9670;&nbsp;</a></span>movemotor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cagecontrol::movemotor </td>
          <td>(</td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>motor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>HWPang</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>QWPang</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>movemotor moves both motors of a cage to certain angles </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">motor</td><td>colorcode of the cage </td></tr>
    <tr><td class="paramname">HWPang</td><td>angle of the HWP in degrees </td></tr>
    <tr><td class="paramname">QWPang</td><td>angle of the QWP in degrees </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a217d948983c0d1c153d29c728b06d764"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a217d948983c0d1c153d29c728b06d764">&#9670;&nbsp;</a></span>SaveConfig()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cagecontrol::SaveConfig </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>SaveConfig stores config to a file. </p>
<p>The QSettings object is updated with the values received from the dialog and saved immediately. </p>

</div>
</div>
<a id="a2e106a12191172da2780a3d7fe137041"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e106a12191172da2780a3d7fe137041">&#9670;&nbsp;</a></span>slot_changeoffsetusage</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cagecontrol::slot_changeoffsetusage </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>uo_in</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>slot_changeoffsetusage changes the usage of the waveplate offset </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">useoffset</td><td>true if waveplate offset is to be used</td></tr>
  </table>
  </dd>
</dl>
<p>The term 'offset' refers to the waveplate angles specified in the </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="classcagecontrol.xhtml#a5350ebcf40a0c709af82276e6ce2284d" title="GUI tab containing settings. ">settingstab</a>. E.g.: 'H' of HWP specified in he <a class="el" href="classcagecontrol.xhtml#a5350ebcf40a0c709af82276e6ce2284d" title="GUI tab containing settings. ">settingstab</a> is 50° and one wants to rotate the waveplate to H+10°. If (<a class="el" href="classcagecontrol.xhtml#aaae4d96e61ebe50baf65014003208ac0" title="If true, the angles in the settings-tab will be used as &#39;0&#39;. ">useoffset</a>==true), one needs to rotate the motor to 10°. If (<a class="el" href="classcagecontrol.xhtml#aaae4d96e61ebe50baf65014003208ac0" title="If true, the angles in the settings-tab will be used as &#39;0&#39;. ">useoffset</a>==false), one needs to rotate the motor to 60°. </dd></dl>

</div>
</div>
<a id="a27d63224f95901dbbe8560cd88c90bca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27d63224f95901dbbe8560cd88c90bca">&#9670;&nbsp;</a></span>slot_changeWPangles</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cagecontrol::slot_changeWPangles </td>
          <td>(</td>
          <td class="paramtype">QVector&lt; double &gt;&#160;</td>
          <td class="paramname"><em>angles</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>slot_changeWPangles sets offsetangles for all waveplates </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">angles</td><td>vector containing all angles. Ordering: HWP0,HWP1,...,HWPn,QWP0,QWP1,...,QWPn </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af9a2772a38394159c54d7e5d7f2a86fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9a2772a38394159c54d7e5d7f2a86fb">&#9670;&nbsp;</a></span>slot_moveHV</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cagecontrol::slot_moveHV </td>
          <td>(</td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>moveHV </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">color</td><td>colorcode of the cage, or 'all' </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a138905383fdc09a0b5077a185eaf6682"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a138905383fdc09a0b5077a185eaf6682">&#9670;&nbsp;</a></span>slot_moveLR</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cagecontrol::slot_moveLR </td>
          <td>(</td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>moveLR </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">color</td><td>colorcode of the cage, or 'all' </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2d971435af3267351272b2c2d5f2f709"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d971435af3267351272b2c2d5f2f709">&#9670;&nbsp;</a></span>slot_movemotors</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cagecontrol::slot_movemotors </td>
          <td>(</td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>HWPang</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>QWPang</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>movemotors </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">color</td><td>colorcode of the cage, or 'all' </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3207f15cba9458e32fb5c2cf366c4b44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3207f15cba9458e32fb5c2cf366c4b44">&#9670;&nbsp;</a></span>slot_movePM</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cagecontrol::slot_movePM </td>
          <td>(</td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>movePM </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">color</td><td>colorcode of the cage, or 'all' </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a244c02598b4b73db82b5852561634084"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a244c02598b4b73db82b5852561634084">&#9670;&nbsp;</a></span>updatesettings</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cagecontrol::updatesettings </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>updatesettings fills variables with data from GUI </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">d</td><td>unused </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2cfb7b65a7b8838d5f2acaa384a7cfcc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cfb7b65a7b8838d5f2acaa384a7cfcc">&#9670;&nbsp;</a></span>updatesettingsint</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cagecontrol::updatesettingsint </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>updatesettingsint wrapper, just calls </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcagecontrol.xhtml#a244c02598b4b73db82b5852561634084" title="updatesettings fills variables with data from GUI ">updatesettings(double d)</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">i</td><td>unused </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aab3dedc2c4b814569988c93bd30546c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab3dedc2c4b814569988c93bd30546c7">&#9670;&nbsp;</a></span>updatestatus()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cagecontrol::updatestatus </td>
          <td>(</td>
          <td class="paramtype">QString&#160;</td>
          <td class="paramname"><em>msg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>updatestatus writes message to statusbar and to a logfile </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>Message to write </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aaae4d96e61ebe50baf65014003208ac0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaae4d96e61ebe50baf65014003208ac0">&#9670;&nbsp;</a></span>useoffset</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool cagecontrol::useoffset</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>If true, the angles in the settings-tab will be used as '0'. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classcagecontrol.xhtml#a2e106a12191172da2780a3d7fe137041" title="slot_changeoffsetusage changes the usage of the waveplate offset ">slot_changeoffsetusage</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="cagecontrol_8h_source.xhtml">cagecontrol.h</a></li>
<li>cagecontrol.cpp</li>
<li>cagecontrol_motors.cpp</li>
<li>cagecontrol_ui.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
